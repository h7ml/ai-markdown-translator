name: Release

on:
  push:
    tags:
      - 'v*' # 当推送标签（如 v1.0.13）时触发
  workflow_dispatch:
    inputs:
      tags:
        type: string
        default: '1.0.13' # 默认的版本号，如果手动触发时没有输入，使用默认值

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile || echo "Dependency installation failed"

      - name: Build
        run: |
          pnpm build || echo "Build failed"
          node ./scripts/copy.js

      - name: Generate Changelog
        run: |
          npx changelogen@latest --release --bump || echo "Changelog generation failed"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Publish to NPM
        run: |
          pnpm publish --no-git-checks || echo "Publish to NPM failed"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit and Push
        run: |
          git add CHANGELOG.md
          git config --global user.email "action@h7ml.cn"
          git config --global user.name "GitHub Action"
          git config advice.ignoredHook false

          # 获取版本号
          VERSION=${GITHUB_REF#refs/tags/v}  # 处理从标签获取版本号
          # 如果是手动触发（workflow_dispatch），则使用输入的版本号
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.tags }}"
          fi

          # 提交更新的 changelog
          git commit -m "chore(release): update CHANGELOG for v$VERSION [skip ci]" -a || echo "No changes to commit"

          git checkout main || git checkout -b main 

          git push origin main --force || echo "Push to repository failed"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
